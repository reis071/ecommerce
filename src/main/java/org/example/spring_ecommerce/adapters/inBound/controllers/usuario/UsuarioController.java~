package org.example.spring_ecommerce.adapters.inBound.controllers.usuario;

import lombok.RequiredArgsConstructor;

import org.example.spring_ecommerce.application.useCases.usuario.UsuarioUseCases;
import org.example.spring_ecommerce.domain.usuario.Usuario;
import org.example.spring_ecommerce.application.services.usuario.UsuarioService;

import org.example.spring_ecommerce.infrastructure.configuration.security.AuthenticationUsuarioCustom;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;

import org.springframework.web.bind.annotation.*;

import java.util.HashMap;

@RequiredArgsConstructor
@RestController
@RequestMapping("/usuarios")
public class UsuarioController {


    private final UsuarioUseCases usuarioUseCases;
    private final AuthenticationUsuarioCustom autenticacao;

    @PostMapping(path = "/cadastrar-usuario")
    public ResponseEntity<Usuario> cadastrarUsuario(@RequestBody Usuario usuario) {
        System.out.println("Chamou o controller!");
        usuarioUseCases.salvar(usuario);
        return ResponseEntity.ok(usuario);
    }

    @PostMapping(path = "/autenticar")
    private ResponseEntity<String> autenticar(@RequestBody HashMap<String, String> credencials) {
        String email = credencials.get("email");
        String senha = credencials.get("senha");

        autenticacao.autenticar(email, senha);

        return ResponseEntity.status(HttpStatus.ACCEPTED).body("Autenticado com sucesso.");
    }

//    @PostMapping("/solicitar-nova-senha")
//    public ResponseEntity<String> requestPasswordReset(@RequestParam String email) {
//        usuarioService.enviarSolicitacaoDeResetarSenha(email);
//        return ResponseEntity.status(HttpStatus.ACCEPTED).body("Link de reset de senha enviado para o email.");
//    }
//
//    @PostMapping("/resetar-senha")
//    public ResponseEntity<String> resetarSenhaUsuario(@RequestParam String token,
//                                                @RequestParam String novaSenha) {
//        usuarioService.resetarSenha(token, novaSenha);
//        return ResponseEntity.status(HttpStatus.ACCEPTED).body("Senha alterada com sucesso.");
//    }

    @PutMapping("depositar")
    public ResponseEntity<String> depositar(@RequestParam double valor) {
        usuarioUseCases.depositar(valor);

        return ResponseEntity.status(HttpStatus.ACCEPTED).body("Depositado com sucesso.");
    }

}
